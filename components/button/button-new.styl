@require '~styles/variables'
@require '~styles-lib/mixins'

.button
	rounded-corners()
	display: inline-block
	text-transform: uppercase
	font-family: $font-family-base
	font-size: $font-size-small
	font-weight: bold
	line-height: $button-line-height
	padding: 0 $button-padding-horizontal
	vertical-align: middle
	cursor: pointer
	border: 0
	outline: 0
	white-space: nowrap
	text-decoration: none !important
	user-select: none

	// Hover state always matches "primary solid".
	&:hover
		theme-prop('background-color', 'bi-bg', true)
		theme-prop('border-color', 'bi-bg', true)
		theme-prop('color', 'bi-fg', true)
		text-decoration: none
		cursor: pointer

	// Disabled state.
	&.-disabled, &[disabled], fieldset[disabled] &
		cursor: not-allowed
		opacity: 0.5

		.jolticon
			cursor: not-allowed

	/* .jolticon-addon
	   margin-left: 5px

	   small
	   font-weight: normal
	   font-size: $font-size-tiny
	   vertical-align: baseline */

.-icon
	position: relative
	top: -1px
	cursor: pointer
	vertical-align: middle
	margin: 0 $button-icon-spacing-right 0 0

.-badge
	theme-prop('color', 'highlight')
	background-color: $black
	float: right
	display: inline-block
	padding: 0 ($button-padding-horizontal / 2)
	margin-left: ($button-padding-horizontal / 2) * 1.5
	margin-right: -($button-padding-horizontal)
	font-size: $font-size-small
	border-top-right-radius: $border-radius-base
	border-bottom-right-radius: $border-radius-base

/**
 * Outline buttons
 */
.-outline
	border-width: $button-outline-border-size
	border-style: solid
	line-height: ($button-line-height - (@border-width * 2))
	padding-left: $button-padding-horizontal - @border-width
	padding-right: @padding-left

	.-badge
		margin-right: -($button-padding-horizontal - $button-outline-border-size)
		border-top-right-radius: ($border-radius-base / 2)
		border-bottom-right-radius: ($border-radius-base / 2)

/**
 * Button types
 */
.button
	theme-prop('background-color', 'fg')
	theme-prop('color', 'bg')

.-primary
	theme-prop('background-color', 'bi-bg')
	theme-prop('color', 'bi-fg')

.-outline
	theme-prop('border-color', 'fg')
	theme-prop('color', 'fg')
	background-color: transparent

	&.-primary
		theme-prop('border-color', 'bi-bg')
		theme-prop('color', 'fg')

/**
 * Trans buttons
 */
.-trans
	border-color: transparent

/**
 * Overlay buttons
 */
.-overlay
	&.-outline, &.-trans
		color: $dark-theme-fg
		background-color: rgba($black, 0.65)

	&.-outline
		border-color: $dark-theme-fg

	&.-trans
		border-color: transparent

/**
 * Sparse buttons
 */
.-sparse
	$$btn-horizontal-padding = (($button-line-height - $button-icon-size) / 2)
	// We basically override the left/right padding to match the top and bottom.
	padding-left: $$btn-horizontal-padding
	padding-right: $$btn-horizontal-padding

	.-badge
		margin-right: -($$btn-horizontal-padding)
		margin-left: $$btn-horizontal-padding

	.-icon
		margin: 0 !important

	&.-outline
		$$btn-horizontal-padding = (($button-line-height - $button-icon-size) / 2) - $button-outline-border-size
		padding-left: $$btn-horizontal-padding
		padding-right: $$btn-horizontal-padding

		.-badge
			margin-right: -($$btn-horizontal-padding)
			margin-left: $$btn-horizontal-padding

/**
 * Circle buttons
 * Only works for sparse buttons.
 */
.-circle.-sparse
	border-radius: 50%

/**
 * Block buttons
 */
.-block
	display: block
	width: 100%
	text-align: center

// Put a bit of spacing between two block buttons on top of each other.
.-block + .-block
	margin-top: 5px

// Block only on xs.
@media $media-xs
	.-block-xs
		display: block
		width: 100%
		text-align: center

	.-block-xs + .-block-xs, .-block-xs + .btn-block, .btn-block + .-block-xs
		margin-top: 5px
